---
export interface Props {
  lang?: 'zh' | 'en';
  showAvatar?: boolean;
  showLinks?: boolean;
}

const { lang = 'zh', showAvatar = true, showLinks = true } = Astro.props;

const personalInfo = {
  zh: {
    name: '你的名字',
    bio: '这里是你的个人简介，可以介绍你的背景、兴趣和专业领域。',
    description: '开发者 | 创作者 | 思考者'
  },
  en: {
    name: 'Your Name',
    bio: 'This is your personal bio where you can introduce your background, interests, and expertise.',
    description: 'Developer | Creator | Thinker'
  }
};

const info = personalInfo[lang];

const socialLinks = [
  {
    name: 'Email',
    url: 'mailto:your@email.com',
  },
  {
    name: 'GitHub',
    url: 'https://github.com/yourusername',
  },
  {
    name: 'Twitter',
    url: 'https://twitter.com/yourusername',
  },
  {
    name: 'RSS',
    url: '/blog/rss.xml',
  }
];
---

<div class="text-left space-y-6">
  {showAvatar && (
    <div class="w-16 h-16 rounded-full bg-gray-200 overflow-hidden">
      <img
        src="/blog/avatar.jpg"
        alt={info.name}
        class="w-full h-full object-cover"
        onerror="this.style.display='none'; this.nextElementSibling.style.display='flex'"
      />
      <!-- Fallback avatar -->
      <div class="hidden w-full h-full bg-gray-200 items-center justify-center text-xl font-medium text-gray-600">
        {info.name.charAt(0)}
      </div>
    </div>
  )}

  <div class="space-y-4">
    <div>
      <h1 class="text-3xl font-bold text-gray-900 mb-2">
        {info.name}
      </h1>
      <p class="text-lg text-gray-600 mb-4">
        {info.description}
      </p>
      <p class="text-gray-700 leading-relaxed max-w-2xl">
        {info.bio}
      </p>
    </div>

    {showLinks && (
      <div class="flex flex-wrap gap-4 text-sm">
        {socialLinks.map((link) => (
          <a
            href={link.url}
            target={link.name !== 'Email' && link.name !== 'RSS' ? '_blank' : undefined}
            rel={link.name !== 'Email' && link.name !== 'RSS' ? 'noopener noreferrer' : undefined}
            class="text-gray-500 hover:text-gray-900 transition-colors underline"
          >
            {link.name}
          </a>
        ))}
      </div>
    )}
  </div>
</div>